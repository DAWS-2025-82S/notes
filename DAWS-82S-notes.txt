session 01 
-------------------------------------------------------------------------------------------------------------------------------
What is DevOps?
Waterfall vs Agile vs DevOps
SDLC

create organisation in Github
create repo in  new org in github
create folder with 82s and create folder with repo name locally
Execute the below commands to  intialise repo in local and push to remote
--------------------------------------------------------------------------
git init
git branch -M main
git remote add origin https://github.com/DAWS-2025-82S/notes.git
git add .
git commit -m "session-01"
git push origin main

For author identity configure below
------------------------------------
git config --global user.email "rajasekharb974@gmail.com"
git config --global user.name "rajasekhar"

To unstage a new file after using git add . use the command below
git rm --cached DAWS-82S-notes.txt

Before commiting the changes if the file is modified again after git add . then to revert the changes made, use the command below
 git restore DAWS-82S-notes.txt		---  to discard changes in working directory
 git add .							--- to include the file changes
 
 git restore --staged DAWS-82S-notes.txt  -- to unstage the already existing file in staging area

Test updated in github
-------------------------------------------------------------------------------------------------------------------------------------------------
session 02 
-------------------------------------------------------------------------------------------------------------------------------------------------
What is a Computer?
Client Server Architecture

AWS account with N-virginia region because of less cost
AWS AMI setup
AWS security group --- allow-all
Allow all Inbound and outbound
AWS Instance with devops-practice image

Linus Torvalds  -- Inventor of linux
Linux kernel
Linux -> C language == Kernel 
OS == Kernel + User Interface == Open Source

Authentication mechanisms
What you know --> Username and Password
What you have --> Username and token/OTP
What you are --> Fingerprints, Retina, Palm, etc.

Git bash Installation

Public key and Private key

public key -- copied to the server
Private key -- shared only with the users who need access, not to all

Lock and Key 
Lock --> Public 
Key --> Private

ssh-keygen -f <filename>

Server == IP(Public)

Enable file extensions in windows
ControlPanel--->FileExplorer--->Uncheck option Hide extensions

keyPairs---> Import keypairs in AWS



-------------------------------------------------------------------------------------------------------------------------------------------------
session 08 
-------------------------------------------------------------------------------------------------------------------------------------------------
DNS 
How DNS works

Browser--->OS-->ISP(DNS Resolver)-->ICANN(RootServer)-->TLD Server-->NameServer

ICANN --> Internet Corporation for assigned names and numbers --> countries, reputed organistions
ICANN maintains root servers

there are 13 root servers in the world
https://www.iana.org/domains/root/servers

top level domains(ICANN root servers will have this top level domain)
.telugu , .com , .in , .uk, .net, .edu, .gov, .us, .au, .org, .ai, .online

.gov.in, .co.in --> sub level domain

ICANN --> To start new domain i.e., top level domain  .telugu domain we need to approach ICANN. I need to complete all the process

domain registars(mediators) --> godaddy, hostinger, aws, gcp, azure

https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains

Create Domain using hostinger
Domain -- raj82s.online

Register the domain in AWS using hosted zone
Copy the nameservers from AWS and update/change nameservers in Hostinger

change in NS --> Hostinger updates the change of Nameservers to .online TLD
now aws manages my domain

Hostinger updates Radix Registry(Top level TLD) about raj82s.online --> who bought this domain and nameservers

nameservers = who managed this domain = records to the DNS

A record = IP address

Create A record for backend and DB with Private IP
Create A record for frontend with public IP

DB A record       -- mysql.raj82s.online
backend A record  -- backend.raj82s.online
frontend A record -- raj82s.online

mysql.raj82s.online --> DNS resolver --> .online TLD --> provides nameservers to raj82s.online --> mysql.raj82s.online A record

nslookup -- to check the domain

Record types
=============
A --> points to IP address
CNAME --> points to another domain
MX --> mail records (info@joindevops.com)
TXT --> Domain ownership validaton purpose
NS --> nameservers
SOA --> who is the authority of this domain

What happens when we book domain?
What happens when someone enter our domain in browser?
How to become TLD?

[Unit]
Description = Backend Service

[Service]
User=expense
Environment=DB_HOST="mysql.raj82s.online"
ExecStart=/bin/node /app/index.js
SyslogIdentifier=backend

[Install]
WantedBy=multi-user.target


proxy_http_version 1.1;

location /api/ { proxy_pass http://backend.raj82s.online:8080/; }

location /health {
  stub_status on;
  access_log off;
}

http://raj82s.online/api/transaction

http://backend.raj82s.online:8080/transaction


http://raj82s.online/api/transaction --> send request to backend --> backend responds with data

inode, symlink/softlink and hardlink

what is inode?

inode stores the file type(file or folder), permissions, ownership, file size, timestamp, disk location(memory location)

lrwxrwxrwx  1 root root    11 Dec 26 03:10 DbConfig1.js -> DbConfig.js
l represents link file

symlink is like shortcut it points to the original file. symlink inode and actual file inode is different. symlink breaks when actual file is deleted. symlink can be created to folders/directories

hardlink inode is same as actual file. hardlink is useful for backup of the file. if original file is deleted hardlink remains same. we can't create hardlinks to folders/directories

how do you findout hardlinks for a particular file?

find / -inum "<inode-number>"

-------------------------------------------------------------------------------------------------------------------------------------------------
session 16 
-------------------------------------------------------------------------------------------------------------------------------------------------
Shell disadvantages
======================
Error Handling
Not idempotent
Homogenous --> only works for a particular distro
Not scalable to many servers
Password security
syntax is not easy

user: ec2-user
Pwd: DevOps321
AMI Image: RHEL devops-practice

ssh ec2-user@Public-IP
ssh connection will not work with private IP

ssh ec2-user@98.81.90.117 'echo "Hello Word" > /tmp/hello.txt'

What is configuration management
Configuration Management tools --> Chef, puppet, rundeck, Ansible
Ansible architecture
push vs pull
Ansible Installation
----------------------
sudo dnf install ansible -y

Ansible uses SSH protocol, no need of agent i.e agentless
Ansible also implmented pull based for few usecases.

adhoc commands
====================
ansible all -i <IP>, -e ansible_user=ec2-user -e ansible_password=DevOps321 -m ping

ansible all -i <PrivateIP>, -e ansible_user=ec2-user -e ansible_password=DevOps321 -m ping  --- Use Private IP or Public IP when connecting  from AWS instance to AWS instance

ansible all -i <PublicIP>, -e ansible_user=ec2-user -e ansible_password=DevOps321 -m ping --- Use Public IP when connecting  from External instance to AWS instance

ansible all -i 172.31.23.37, -e ansible_user=ec2-user -e ansible_password=DevOps321 -m dnf -a "name=nginx state=installed" -b

ansible all -i 172.31.23.37, -e ansible_user=ec2-user -e ansible_password=DevOps321 -m service -a "name=nginx state=started" -b

Playbook
---------

ansible-playbook -i inventory.ini -e ansible_user=ec2-user -e ansible_password=DevOps321 01-playbook.yaml

git pull --- pull the changes from github

XML vs JSON vs YAML
Playbook









